basePath: /api/v1
definitions:
  entity.Organization:
    properties:
      name:
        type: string
      org_id:
        type: string
      org_key:
        type: string
    type: object
  entity.Permission:
    properties:
      name:
        type: string
      permission_id:
        type: string
      permission_key:
        type: string
      resource_id:
        type: string
    type: object
  entity.Resource:
    properties:
      name:
        type: string
      org_id:
        type: string
      resource_id:
        type: string
      resource_key:
        type: string
    type: object
  entity.Role:
    properties:
      name:
        type: string
      org_id:
        type: string
      role_id:
        type: string
      role_key:
        type: string
      users:
        items:
          $ref: '#/definitions/entity.UserID'
        type: array
    type: object
  entity.User:
    properties:
      firstname:
        type: string
      lastname:
        type: string
      org_id:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  entity.UserID:
    properties:
      user_id:
        type: string
    type: object
  keto.Tuple:
    properties:
      object:
        type: string
      relation:
        type: string
      subject:
        type: string
    type: object
  organization.CreateOrganizationRequest:
    properties:
      name:
        type: string
      org_key:
        type: string
    type: object
  organization.UpdateOrganizationRequest:
    properties:
      name:
        type: string
    type: object
  permission.CreateResourceRequest:
    properties:
      name:
        type: string
      permission_key:
        type: string
    type: object
  permission.UpdateResourceRequest:
    properties:
      name:
        type: string
    type: object
  resource.CreateResourceRequest:
    properties:
      name:
        type: string
      resource_key:
        type: string
    type: object
  resource.UpdateResourceRequest:
    properties:
      name:
        type: string
    type: object
  role.CreateRoleRequest:
    properties:
      name:
        type: string
      role_key:
        type: string
      users:
        items:
          $ref: '#/definitions/entity.UserID'
        type: array
    type: object
  role.UpdateRoleRequest:
    properties:
      name:
        type: string
    type: object
  user.CreateUserRequest:
    properties:
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      firstname:
        type: string
      lastname:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cronuseo API
  version: "1.0"
paths:
  /{org_id}/resource:
    get:
      description: Get all resources.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Resource'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource
    post:
      consumes:
      - application/json
      description: Create resource.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resource.CreateResourceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{org_id}/resource/{id}:
    delete:
      description: Delete resource.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    get:
      description: Get resource by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Resource'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: Update resource.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resource.UpdateResourceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{org_id}/role:
    get:
      description: Get all roles.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Role'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create role.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Role'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Role
  /{org_id}/role/{id}:
    delete:
      description: Delete role.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Role
    get:
      description: Get role by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Role'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: Update role.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Role'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Role
  /{org_id}/user:
    get:
      description: Get all users.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.User'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - User
  /{org_id}/user/{id}:
    delete:
      description: Delete user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
    get:
      description: Get user by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
  /{resource_id}/permission:
    get:
      description: Get all resources.
      parameters:
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Permission'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Permission
    post:
      consumes:
      - application/json
      description: Create permission.
      parameters:
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/permission.CreateResourceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Permission'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Permission
  /{resource_id}/permission/{id}:
    delete:
      description: Delete permission.
      parameters:
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Permission
    get:
      description: Get permission by ID.
      parameters:
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Permission'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Permission
    put:
      consumes:
      - application/json
      description: Update permission.
      parameters:
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/permission.UpdateResourceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Permission'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Permission
  /org_id/keto:
    post:
      consumes:
      - application/json
      description: Create tuple.
      parameters:
      - description: Organization ID
        in: path
        name: org
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/keto.Tuple'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Keto
  /organization:
    get:
      description: Get all organizations.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Organization'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Create organization.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/organization.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Organization
  /organization/{id}:
    delete:
      description: Delete organization.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
    get:
      description: Get organization by ID.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Organization'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Update organization.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/organization.UpdateOrganizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
swagger: "2.0"
