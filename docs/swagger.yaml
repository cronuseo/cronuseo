basePath: /api/v1
definitions:
  check.CheckRequest:
    properties:
      action:
        type: string
      resource:
        type: string
      username:
        type: string
    type: object
  group.CreateGroupRequest:
    properties:
      display_name:
        type: string
      identifier:
        type: string
      roles:
        items:
          type: string
        type: array
      users:
        items:
          type: string
        type: array
    type: object
  group.UpdateGroupRequest:
    properties:
      added_roles:
        items:
          type: string
        type: array
      added_users:
        items:
          type: string
        type: array
      display_name:
        type: string
      removed_roles:
        items:
          type: string
        type: array
      removed_users:
        items:
          type: string
        type: array
    type: object
  mongo_entity.Action:
    properties:
      display_name:
        type: string
      id:
        type: string
      identifier:
        type: string
    type: object
  mongo_entity.Group:
    properties:
      display_name:
        type: string
      id:
        type: string
      identifier:
        type: string
      roles:
        items:
          type: string
        type: array
      users:
        items:
          type: string
        type: array
    type: object
  mongo_entity.Permission:
    properties:
      action:
        type: string
      resource:
        type: string
    type: object
  mongo_entity.Resource:
    properties:
      actions:
        items:
          $ref: '#/definitions/mongo_entity.Action'
        type: array
      display_name:
        type: string
      id:
        type: string
      identifier:
        type: string
    type: object
  mongo_entity.Role:
    properties:
      display_name:
        type: string
      groups:
        items:
          type: string
        type: array
      id:
        type: string
      identifier:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  mongo_entity.RolePermission:
    properties:
      permissions:
        items:
          $ref: '#/definitions/mongo_entity.Permission'
        type: array
      role_id:
        type: string
    type: object
  mongo_entity.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      groups:
        items:
          type: string
        type: array
      id:
        type: string
      last_name:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  organization.CreateOrganizationRequest:
    properties:
      display_name:
        type: string
      identifier:
        type: string
    type: object
  organization.Organization:
    properties:
      api_key:
        type: string
      display_name:
        type: string
      groups:
        items:
          $ref: '#/definitions/mongo_entity.Group'
        type: array
      id:
        type: string
      identifier:
        type: string
      resources:
        items:
          $ref: '#/definitions/mongo_entity.Resource'
        type: array
      role_permissions:
        items:
          $ref: '#/definitions/mongo_entity.RolePermission'
        type: array
      roles:
        items:
          $ref: '#/definitions/mongo_entity.Role'
        type: array
      users:
        items:
          $ref: '#/definitions/mongo_entity.User'
        type: array
    type: object
  resource.CreateResourceRequest:
    properties:
      actions:
        items:
          $ref: '#/definitions/mongo_entity.Action'
        type: array
      display_name:
        type: string
      identifier:
        type: string
    type: object
  resource.PatchResourceRequest:
    properties:
      added_actions:
        items:
          $ref: '#/definitions/mongo_entity.Action'
        type: array
      removed_actions:
        items:
          type: string
        type: array
    type: object
  resource.Resource:
    properties:
      actions:
        items:
          $ref: '#/definitions/mongo_entity.Action'
        type: array
      display_name:
        type: string
      id:
        type: string
      identifier:
        type: string
    type: object
  resource.UpdateResourceRequest:
    properties:
      added_actions:
        items:
          $ref: '#/definitions/mongo_entity.Action'
        type: array
      display_name:
        type: string
      removed_actions:
        items:
          type: string
        type: array
    type: object
  role.CreateRoleRequest:
    properties:
      display_name:
        type: string
      groups:
        items:
          type: string
        type: array
      identifier:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  role.PatchRolePermissionRequest:
    properties:
      added_permissions:
        items:
          $ref: '#/definitions/mongo_entity.Permission'
        type: array
      removed_permissions:
        items:
          $ref: '#/definitions/mongo_entity.Permission'
        type: array
    type: object
  role.Role:
    properties:
      display_name:
        type: string
      groups:
        items:
          type: string
        type: array
      id:
        type: string
      identifier:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  role.UpdateRoleRequest:
    properties:
      added_groups:
        items:
          type: string
        type: array
      added_users:
        items:
          type: string
        type: array
      display_name:
        type: string
      removed_groups:
        items:
          type: string
        type: array
      removed_users:
        items:
          type: string
        type: array
    type: object
  user.CreateUserRequest:
    properties:
      first_name:
        type: string
      groups:
        items:
          type: string
        type: array
      last_name:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      added_groups:
        items:
          type: string
        type: array
      added_roles:
        items:
          type: string
        type: array
      first_name:
        type: string
      last_name:
        type: string
      removed_groups:
        items:
          type: string
        type: array
      removed_roles:
        items:
          type: string
        type: array
    type: object
  user.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      groups:
        items:
          type: string
        type: array
      id:
        type: string
      last_name:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cronuseo API
  version: "1.0"
paths:
  /{org_id}/group:
    get:
      description: Get all groups.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: cursor
        in: query
        name: cursor
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mongo_entity.Group'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Group
    post:
      consumes:
      - application/json
      description: Create group.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/group.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/mongo_entity.Group'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Group
  /{org_id}/group/{id}:
    get:
      description: Get group by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mongo_entity.Group'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Group
    put:
      consumes:
      - application/json
      description: Update group.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/group.UpdateGroupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/mongo_entity.Group'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Group
  /{org_id}/resource:
    get:
      description: Get all resources.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: cursor
        in: query
        name: cursor
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/resource.Resource'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource
    post:
      consumes:
      - application/json
      description: Create resource.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resource.CreateResourceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/resource.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{org_id}/resource/{id}:
    delete:
      description: Delete resource.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    get:
      description: Get resource by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resource.Resource'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: Patch resource.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resource.PatchResourceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/resource.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{org_id}/role:
    get:
      description: Get all roles.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: cursor
        in: query
        name: cursor
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/role.Role'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create role.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/role.Role'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Role
  /{org_id}/role/{id}:
    delete:
      description: Delete role.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Role
    get:
      description: Get role by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: Update role.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/role.Role'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Role
  /{org_id}/role/{id}/permission:
    get:
      description: Get all permissions for role.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mongo_entity.Permission'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Role
    patch:
      consumes:
      - application/json
      description: Patch role permission.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.PatchRolePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/role.Role'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Role
  /{org_id}/user:
    get:
      description: Get all users.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: cursor
        in: query
        name: cursor
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - User
  /{org_id}/user/{id}:
    get:
      description: Get user by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
  /{org}/permission/check:
    post:
      consumes:
      - application/json
      description: Check.
      parameters:
      - description: Organization
        in: path
        name: org
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/check.CheckRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Permission
  /organization:
    get:
      description: Get all organizations.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/organization.Organization'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Create organization.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/organization.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/organization.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Organization
  /organization/{id}:
    delete:
      description: Delete organization.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
    get:
      description: Get organization by ID.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/organization.Organization'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
  /organization/{id}/refresh:
    post:
      consumes:
      - application/json
      description: Refresh organization API Key.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/organization.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
swagger: "2.0"
