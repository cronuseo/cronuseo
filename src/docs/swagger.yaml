basePath: /api/v1
definitions:
  models.Action:
    properties:
      action_id:
        type: string
    type: object
  models.Group:
    properties:
      group_id:
        type: string
      group_key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
      org_id:
        type: string
      users:
        items:
          $ref: '#/definitions/models.UserID'
        type: array
    required:
    - group_key
    - name
    type: object
  models.GroupCreateRequest:
    properties:
      group_key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
      users:
        items:
          $ref: '#/definitions/models.UserID'
        type: array
    required:
    - group_key
    - name
    type: object
  models.GroupID:
    properties:
      group_id:
        type: string
    type: object
  models.GroupOnlyWithID:
    properties:
      group_id:
        type: integer
    type: object
  models.GroupPatchOperation:
    properties:
      op:
        type: string
      users:
        items:
          $ref: '#/definitions/models.UserID'
        type: array
    type: object
  models.GroupPatchRequest:
    properties:
      operations:
        items:
          $ref: '#/definitions/models.GroupPatchOperation'
        type: array
    type: object
  models.GroupUpdateRequest:
    properties:
      name:
        minLength: 4
        type: string
    required:
    - name
    type: object
  models.Organization:
    description: Organization information
    properties:
      name:
        minLength: 4
        type: string
      org_id:
        type: string
      org_key:
        minLength: 4
        type: string
    required:
    - name
    - org_key
    type: object
  models.OrganizationRequest:
    properties:
      name:
        minLength: 4
        type: string
      org_key:
        minLength: 4
        type: string
    required:
    - name
    - org_key
    type: object
  models.OrganizationUpdateRequest:
    properties:
      name:
        minLength: 4
        type: string
    required:
    - name
    type: object
  models.Permission:
    properties:
      actions:
        items:
          $ref: '#/definitions/models.Action'
        type: array
      role_id:
        type: string
    type: object
  models.Permissions:
    properties:
      permissions:
        items:
          $ref: '#/definitions/models.Permission'
        type: array
    type: object
  models.Project:
    properties:
      name:
        type: string
      org_id:
        type: string
      project_id:
        type: string
      project_key:
        minLength: 4
        type: string
    required:
    - name
    - project_key
    type: object
  models.ProjectCreateRequest:
    properties:
      description:
        type: string
      name:
        type: string
      project_key:
        minLength: 4
        type: string
    required:
    - name
    - project_key
    type: object
  models.ProjectUpdateRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  models.Resource:
    properties:
      name:
        minLength: 4
        type: string
      project_id:
        type: string
      resource_id:
        type: string
      resource_key:
        minLength: 4
        type: string
    required:
    - name
    - resource_key
    type: object
  models.ResourceAction:
    properties:
      name:
        minLength: 4
        type: string
      resource_action_id:
        type: string
      resource_action_key:
        minLength: 4
        type: string
      resource_id:
        type: string
    required:
    - name
    - resource_action_key
    type: object
  models.ResourceActionCreateRequest:
    properties:
      name:
        minLength: 4
        type: string
      resource_action_key:
        minLength: 4
        type: string
    required:
    - name
    - resource_action_key
    type: object
  models.ResourceActionUpdateRequest:
    properties:
      name:
        minLength: 4
        type: string
    required:
    - name
    type: object
  models.ResourceCreateRequest:
    properties:
      name:
        minLength: 4
        type: string
      resource_key:
        minLength: 4
        type: string
    required:
    - name
    - resource_key
    type: object
  models.ResourceRole:
    properties:
      groups:
        items:
          $ref: '#/definitions/models.GroupID'
        type: array
      name:
        minLength: 4
        type: string
      resource_id:
        type: string
      resource_role_id:
        type: string
      resource_role_key:
        minLength: 4
        type: string
      users:
        items:
          $ref: '#/definitions/models.UserID'
        type: array
    required:
    - name
    - resource_role_key
    type: object
  models.ResourceRoleCreateRequest:
    properties:
      groups:
        items:
          $ref: '#/definitions/models.GroupID'
        type: array
      name:
        minLength: 4
        type: string
      resource_role_key:
        minLength: 4
        type: string
      users:
        items:
          $ref: '#/definitions/models.UserID'
        type: array
    required:
    - name
    - resource_role_key
    type: object
  models.ResourceRolePatchOperation:
    properties:
      op:
        type: string
      path:
        type: string
      values:
        items:
          $ref: '#/definitions/models.Value'
        type: array
    type: object
  models.ResourceRolePatchRequest:
    properties:
      operations:
        items:
          $ref: '#/definitions/models.ResourceRolePatchOperation'
        type: array
    type: object
  models.ResourceRoleUpdateRequest:
    properties:
      name:
        minLength: 4
        type: string
    required:
    - name
    type: object
  models.ResourceUpdateRequest:
    properties:
      name:
        minLength: 4
        type: string
    required:
    - name
    type: object
  models.User:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      org_id:
        type: string
      user_id:
        type: string
      username:
        minLength: 4
        type: string
    required:
    - username
    type: object
  models.UserCreateRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      user_id:
        type: string
      username:
        minLength: 4
        type: string
    required:
    - username
    type: object
  models.UserID:
    properties:
      user_id:
        type: string
    type: object
  models.UserUpdateRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.UserWithGroup:
    properties:
      firstname:
        type: string
      groups:
        items:
          $ref: '#/definitions/models.GroupOnlyWithID'
        type: array
      id:
        type: integer
      lastname:
        type: string
      org_id:
        type: integer
      username:
        type: string
    type: object
  models.Value:
    properties:
      value:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cronuseo API
  version: "1.0"
paths:
  /{org_id}/group:
    get:
      description: Get all groups.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Group'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Group
    post:
      consumes:
      - application/json
      description: Create group.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GroupCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Group'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Group
  /{org_id}/group/{id}:
    delete:
      description: Delete group.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Group
    get:
      description: Get groups by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Group'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Group
    patch:
      consumes:
      - application/json
      description: Patch group.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GroupPatchRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Group'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Group
    put:
      consumes:
      - application/json
      description: Update group.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GroupUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Group'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Group
  /{org_id}/project:
    get:
      description: Get all projects.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: Create project.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ProjectCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Project
  /{org_id}/project/{id}:
    delete:
      description: Delete project.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Project
    get:
      description: Get project by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: Update project.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ProjectUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Project
  /{org_id}/user:
    get:
      description: Get all users.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - User
  /{org_id}/user/{id}:
    delete:
      description: Delete user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
    get:
      description: Get user by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserWithGroup'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - User
  /{orgKey}/permission/{res_id}:
    post:
      consumes:
      - application/json
      description: Create permission.
      parameters:
      - description: Organization Key
        in: path
        name: orgKey
        required: true
        type: string
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Permissions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Permission
  /{proj_id}/resource:
    get:
      description: Get all resources.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Resource'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource
    post:
      consumes:
      - application/json
      description: Create resource.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{proj_id}/resource/{id}:
    delete:
      description: Delete resource.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    get:
      description: Get resource by ID.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resource'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: Update resource.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{res_id}/resource_action:
    get:
      description: Get all resource actions.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ResourceAction'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
    post:
      consumes:
      - application/json
      description: Create resource action.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceActionCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceAction'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
  /{res_id}/resource_action/{id}:
    delete:
      description: Delete resource action.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: Resource Action ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
    get:
      description: Get resource action by ID.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: Resource Action ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResourceAction'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
    put:
      consumes:
      - application/json
      description: Update resource action.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: Resource Action ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceActionUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceAction'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
  /{res_id}/resource_role:
    get:
      description: Get all resource roles.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ResourceRole'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
    post:
      consumes:
      - application/json
      description: Create resource role.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceRoleCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceRole'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /{res_id}/resource_role/{id}:
    delete:
      description: Delete resource role.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: Resource Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
    get:
      description: Get resource roles by ID.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: Resource Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResourceRole'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
    patch:
      consumes:
      - application/json
      description: Patch resource role.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: Resource Role ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceRolePatchRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceRole'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
    put:
      consumes:
      - application/json
      description: Update resource role.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: string
      - description: Resource Role ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceRoleUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceRole'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /organization:
    get:
      description: Get all organizations.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Create organization.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.OrganizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Organization
  /organization/{id}:
    delete:
      description: Delete organization.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
    get:
      description: Get organization by ID.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Organization'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Update organization.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.OrganizationUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
swagger: "2.0"
