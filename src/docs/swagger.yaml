basePath: /api/v1
definitions:
  models.GroupOnlyWithID:
    properties:
      group_id:
        type: integer
    type: object
  models.Organization:
    description: Organization information
    properties:
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
      org_id:
        type: integer
    required:
    - key
    - name
    type: object
  models.OrganizationRequest:
    properties:
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
    required:
    - key
    - name
    type: object
  models.OrganizationUpdateRequest:
    properties:
      name:
        minLength: 4
        type: string
    required:
    - name
    type: object
  models.Project:
    properties:
      description:
        type: string
      id:
        type: integer
      key:
        minLength: 4
        type: string
      name:
        type: string
    required:
    - key
    - name
    type: object
  models.ProjectCreateRequest:
    properties:
      description:
        type: string
      key:
        minLength: 4
        type: string
      name:
        type: string
    required:
    - key
    - name
    type: object
  models.ProjectUpdateRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  models.Resource:
    properties:
      description:
        type: string
      id:
        type: integer
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
    required:
    - key
    - name
    type: object
  models.ResourceAction:
    properties:
      description:
        type: string
      id:
        type: integer
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
      permission_name:
        type: string
    required:
    - key
    - name
    type: object
  models.ResourceActionCreateRequest:
    properties:
      description:
        type: string
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
      permission_name:
        type: string
    required:
    - key
    - name
    type: object
  models.ResourceActionUpdateRequest:
    properties:
      description:
        type: string
      name:
        minLength: 4
        type: string
      permission_name:
        type: string
    required:
    - name
    type: object
  models.ResourceActionWithID:
    properties:
      resact_id:
        type: integer
    type: object
  models.ResourceCreateRequest:
    properties:
      description:
        type: string
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
    required:
    - key
    - name
    type: object
  models.ResourceRole:
    properties:
      description:
        type: string
      id:
        type: integer
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
    required:
    - key
    - name
    type: object
  models.ResourceRoleCreateRequest:
    properties:
      description:
        type: string
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
    required:
    - key
    - name
    type: object
  models.ResourceRoleUpdateRequest:
    properties:
      description:
        type: string
      name:
        minLength: 4
        type: string
    required:
    - name
    type: object
  models.ResourceRoleWithGroupsUsers:
    properties:
      actions:
        items:
          $ref: '#/definitions/models.ResourceActionWithID'
        type: array
      groups:
        items:
          $ref: '#/definitions/models.GroupOnlyWithID'
        type: array
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      res_id:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.UserOnlyWithID'
        type: array
    type: object
  models.ResourceUpdateRequest:
    properties:
      description:
        type: string
      key:
        minLength: 4
        type: string
      name:
        minLength: 4
        type: string
    required:
    - key
    - name
    type: object
  models.UserOnlyWithID:
    properties:
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cronuseo API
  version: "1.0"
paths:
  /{org_id}/project:
    get:
      description: Get all projects.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: Create project.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ProjectCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Project
  /{org_id}/project/{id}:
    delete:
      description: Delete project.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: integer
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Project
    get:
      description: Get project by ID.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: integer
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: Update project.
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        type: integer
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ProjectUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Project
  /{proj_id}/resource:
    get:
      description: Get all resources.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Resource'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource
    post:
      consumes:
      - application/json
      description: Create resource.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{proj_id}/resource/{id}:
    delete:
      description: Delete resource.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: integer
      - description: Resource ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    get:
      description: Get resource by ID.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: integer
      - description: Resource ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resource'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: Update resource.
      parameters:
      - description: Project ID
        in: path
        name: proj_id
        required: true
        type: integer
      - description: Resource ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Resource'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource
  /{proj_id}/resource_action/{id}:
    put:
      consumes:
      - application/json
      description: Update resource action.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Resource Action ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceActionUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceAction'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
  /{proj_id}/resource_role/{id}:
    put:
      consumes:
      - application/json
      description: Update resource role.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Resource Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceRoleUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceRole'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /{res_id}/resource_action:
    get:
      description: Get all resource actions.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Resource'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
    post:
      consumes:
      - application/json
      description: Create resource action.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceActionCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceAction'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
  /{res_id}/resource_action/{id}:
    delete:
      description: Delete resource action.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Resource Action ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
    get:
      description: Get resource action by ID.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Resource Action ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResourceAction'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Action
  /{res_id}/resource_role:
    get:
      description: Get all resource roles.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ResourceRole'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
    post:
      consumes:
      - application/json
      description: Create resource role.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResourceRoleCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResourceRole'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /{res_id}/resource_role/{id}:
    delete:
      description: Delete resource role.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Resource Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
    get:
      description: Get resource roles by ID.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Resource Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResourceRoleWithGroupsUsers'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /{res_id}/resource_role/action/{resact_id}:
    post:
      consumes:
      - application/json
      description: Assign resource role to group.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Resource Action ID
        in: path
        name: resact_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /{res_id}/resource_role/group/{group_id}:
    post:
      consumes:
      - application/json
      description: Assign resource role to group.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /{res_id}/resource_role/user/{user_id}:
    post:
      consumes:
      - application/json
      description: Assign resource role to user.
      parameters:
      - description: Resource ID
        in: path
        name: res_id
        required: true
        type: integer
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Resource Role
  /organization:
    get:
      description: Get all organizations.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Create organization.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.OrganizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Organization
  /organization/{id}:
    delete:
      description: Delete organization.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
    get:
      description: Get organization by ID.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Organization'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Update organization.
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.OrganizationUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Organization
swagger: "2.0"
