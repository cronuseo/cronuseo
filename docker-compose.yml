version: '3.8'
services:
  cronuseo-db:
    image: postgres
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
      - ./data/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cronuseo
      - DATABASE_HOST=cronuseo-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  keto-db:
    image: postgres
    restart: always
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_USER=keto
      - POSTGRES_PASSWORD=keto
      - POSTGRES_DB=keto
      - DATABASE_HOST=keto-db
  keto:
    image: oryd/keto:v0.10.0-alpha.0
    ports:
      - "4466:4466"
      - "4467:4467"
    command: serve -c /home/ory/keto.yml
    restart: on-failure
    volumes:
      - type: bind
        source: ./config
        target: /home/ory
    depends_on:
      - keto-db
  keto-migrate:
    image: oryd/keto:v0.10.0-alpha.0
    links:
      - keto-db:keto-db
    volumes:
      - type: bind
        source: ./config
        target: /home/ory
    environment:
      - LOG_LEVEL=debug
      - DSN=postgres://keto:keto@keto-db:5432/keto?sslmode=disable
    command: ["migrate", "up", "-y"]
    restart: on-failure
  api:
    build:
      context: .
      dockerfile: cmd/server/Dockerfile
      args:
          APP_ENV: local
    ports:
      - "8080:8080"
    depends_on:
      cronuseo-db:
        condition: service_healthy
    restart: on-failure
    environment:
      - APP_ENV=local
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
volumes:
  api:
  database_postgres:     
  cache:
    driver: local   
